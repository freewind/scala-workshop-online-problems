(*) 通过对多个函数进行组装来实现功能

假设我们已经定义了以下函数（需要拷贝到你的答案中）：

val double = (number:Int) => 2*number
val add10 = (number:Int) => 10 + number
val negative = (number:Int) => -1 * number

当我们需要实现新的功能时，只需要通过如`andThen`这样的方法，将它们组装在一起即可，例如：

val myconvert = double andThen add10 andThen negative

尝试一下：

myconvert(5)

将输出-20

请合理组装它们实现新的函数，对输入的数字进行转换。

输入的数字将根据“对3求模”的余数，分成三类，每一类的转换规则是一样的。

比如 

1 % 3 == 4 % 3 == 1
2 % 3 == 5 % 3 == 2
3 % 3 == 6 % 3 == 0

所有的整数将会被分为三类。每一类中的数字的转换方式是一样的。

以下为示例：

输入:
1
2
3
4
5
6

输出：
-22
-24
4
-28
-30
-2

请猜测规则，并可对更多的数字进行转换
